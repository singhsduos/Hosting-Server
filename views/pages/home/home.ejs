    <div class="container mt-4 text-center">
      <h1>Welcome to Your Repositories</h1>
      <p>Select a repository from the dropdown:</p>

      <% if (repos && repos.length > 0) { %>
      <div class="selection">
        <div class="custom-select" id="repoSelect" style="margin: 20px 0px;">Select a repository</div>
        <div class="custom-select-container" id="repoSelectContainer"></div>

        <div class="custom-select" id="branchSelect" style="margin-bottom: 20px; display: none;">Select a branch</div>
        <div class="custom-select-container" id="branchSelectContainer" style="display: none;"></div>
      </div>

      <div id="repoDetails" class="repo-details mt-4" style="display: none;">
        <h4>Repository Details</h4>
        <p id="repoName"></p>
        <p id="repoDescription"></p>
        <small id="repoDate"></small>
      </div>

      <% } else { %>
      <div class="alert alert-info" role="alert">
        You have no public repositories to display.
      </div>
      <% } %>
     <button id="cloneButton" style="display: none;">Clone Repository</button>

    </div>
  
    <script>
        $(document).ready(function () {
            const repos = <%- JSON.stringify(repos) %>;
            const container = $(".selection");
            const customSelect = $("#repoSelect");
            const customOptionContainer = $("<div>").addClass("custom-select-container");
            const branchSelect = $('#branchSelect');
            const branchSelectContainer = $('#branchSelectContainer');
            const repoDetails = $('#repoDetails');
            const cloneButton = $('#cloneButton');

            // Sort repositories by creation date and create custom options
            repos.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
                .forEach((repo) => {
                    const customOption = $("<div>")
                        .addClass("custom-select-item")
                        .text(`${repo.name} - ${repo.description || 'No description available'}`);

                    customOption.on("click", function () {
                        // Update repo details on selection
                        customSelect.text(repo.name);
                        customOptionContainer.removeClass("show");
                        customSelect.removeClass("option-active");

                        $("#repoName").text(`Repository Name: ${repo.name}`);
                        $("#repoDescription").text(`Description: ${repo.description || 'No description available'}`);
                        $("#repoDate").text(`Created at: ${new Date(repo.created_at).toLocaleDateString()}`);

                        // Fetch branches when repo is selected
                        $.get(`/fetch-branches?owner=${repo.owner.login}&repoName=${repo.name}`, function (branches) {
                            branchSelectContainer.empty();
                            branches.forEach((branch) => {
                                const branchOption = $('<div>')
                                    .addClass('custom-select-item')
                                    .text(branch.name)
                                    .data('branch', branch);
                                branchSelectContainer.append(branchOption);
                            });
                            branchSelect.show();
                        });
                    });

                    customOptionContainer.append(customOption);
                });

            // Toggle branch select visibility
            branchSelect.on('click', function () {
                $(this).toggleClass('active');
                branchSelectContainer.toggle();
            });

            // Select branch from custom option
            $(document).on('click', '.custom-select-item', function () {
                const branch = $(this).data('branch');
                branchSelect.text(branch.name);
                branchSelectContainer.hide();
                branchSelect.removeClass('active');
                $('#cloneButton').show();
            });

            container.append(customOptionContainer);

            // Toggle custom select dropdown
            customSelect.on("click", function () {
                customSelect.toggleClass("option-active");
                customOptionContainer.toggleClass("show");
                branchSelect.hide();
                cloneButton.hide();
            });

            $(document).on('click', function (e) {
                if (!customSelect.is(e.target) && customSelect.has(e.target).length === 0) {
                    customOptionContainer.removeClass('show');
                    customSelect.removeClass('option-active');
                }

                if (!branchSelect.is(e.target) && branchSelect.has(e.target).length === 0) {
                    branchSelectContainer.hide();
                    branchSelect.removeClass('active');
                }
            });

            $('#cloneButton').on('click', function () {
                const selectedRepo = repos.find(repo => repo.name === $('#repoSelect').text()); // Assuming repo name matches the selected text
                const branchName = branchSelect.text();

                $.ajax({
                    url: '/github/clone',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ repoName: selectedRepo.name, branchName }),
                    success: function (data) {
                          Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: 'Branch cloned successfully!',
                        });
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'An error occurred while cloning the branch. Please try again.',
                        });
                    }
                });
            });

        });
    </script>